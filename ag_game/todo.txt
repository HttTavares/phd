# TODO
# (X) assign plots to agents
# (X) make plots/crops evolve with tick
# (X) make plot/crop lifecycle
# (X) make resources have effects
# (X) make agents decide
# (X) chance to lose hp
# (X) calculate return of crop
# (X) keep track of ticks/epoch/time (state?)
# (X) nutrient necessity and application  
# (X) health dynamics
# (X) state dynamics
# ( ) separate programming state (required for me to develop the code) vs. data state (required to solve phd problems)
# ( ) implement resource effect dynamics. 
#       every resource has an effect dict, e.g., { 'quality': { p(i, a, j) } , 'growth': { p(i, a, j) }, 'health': { p(i, a, j) } }. 
#       resource.perform_effect iterates through this applying probability of going from attribute at quantity i to j by 
#       applying a amount of this resource. (p(i, a, j) object?)
# ( ) create debugging infrastructure
# ( ) transform semantic state into array
# ( ) fazer um input_meaning_vector (um vetor contendo todas as combinações de objetos do input da NN)
# (X) fazer um output_meaning_vector (um vetor contendo todas as combinações de objetos do output da NN)
# (X) fazer o game step usar recursos da decisão do agent
# ( ) fazer training loop completo
# ( ) colocar a operação de achar a ação real fora do agent pq se não fica sem derivada.
# ( ) Where to create logs? game?
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 


# TODO open problems
# ( ) How to deal with the fact that there will be many categories of the same object? 
#       Make one full category and develop way to easily deal with subcategories that satisfy a certain property?
# ( ) what is state and data for each ARAMDP entity?
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 
# ( ) 







#